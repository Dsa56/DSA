#include <iostream>
using namespace std;

class tree {
    int a[20][20], visited[20], v, e;

public:
    void input();
    void display();
    void minimum();
};

void tree::input() {
    int l, u, w;
    cout << "Enter the number of branches (vertices): ";
    cin >> v;

    // Initialize adjacency matrix and visited array
    for (int i = 0; i < v; i++) {
        visited[i] = 0;
        for (int j = 0; j < v; j++) {
            a[i][j] = 999;  // 999 indicates no connection
        }
    }

    cout << "\nEnter the number of connections (edges): ";
    cin >> e;

    for (int i = 0; i < e; i++) {
        cout << "\nEnter the end branches of connection (e.g., 1 2): ";
        cin >> l >> u;
        cout << "Enter the phone company charges for this connection: ";
        cin >> w;
        a[l - 1][u - 1] = a[u - 1][l - 1] = w;
    }
}

void tree::display() {
    cout << "\nAdjacency Matrix:\n";
    for (int i = 0; i < v; i++) {
        for (int j = 0; j < v; j++) {
            cout << a[i][j] << "\t";
        }
        cout << endl;
    }
}

void tree::minimum() {
    int total = 0, min, p = 0, q = 0;
    visited[0] = 1;  // Start from the first vertex

    for (int count = 0; count < v - 1; count++) {
        min = 999;

        for (int i = 0; i < v; i++) {
            if (visited[i]) {
                for (int j = 0; j < v; j++) {
                    if (!visited[j] && a[i][j] < min) {
                        min = a[i][j];
                        p = i;
                        q = j;
                    }
                }
            }
        }

        visited[q] = 1;
        total += min;
        cout << "Minimum cost connection: " << (p + 1) << " -> " << (q + 1) << " with charge: " << min << endl;
    }

    cout << "\nThe minimum total cost of all connections is: " << total << endl;
}

int main() {
    int ch;
    tree t;

    do {
        cout << "\n========= PRIM'S ALGORITHM =========";
        cout << "\n1. Input\n2. Display\n3. Minimum Spanning Tree\n4. Exit";
        cout << "\nEnter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                t.input();
                break;
            case 2:
                t.display();
                break;
            case 3:
                t.minimum();
                break;
            case 4:
                cout << "Exiting program.\n";
                break;
            default:
                cout << "Invalid choice. Try again.\n";
        }
    } while (ch != 4);

    return 0;
}
